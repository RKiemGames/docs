# SOME DESCRIPTIVE TITLE.
# Copyright (C) Rdckgmes 2019
# This file is distributed under the same license as the Rdckgames package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2019.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Rdckgames 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-09-05 13:32-0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"

#: ../../prog_01.rst:2
msgid "Introducción a la programación"
msgstr ""

#: ../../prog_01.rst:4
msgid "Creando un formulario de registro"
msgstr ""

#: ../../prog_01.rst:6
msgid ""
"Quizás un formulario de registro no tiene mucha relación con videojuegos "
"pero, te puede servir de mucho si luego quieres aplicarlo para que tus "
"gamers ingresen sus datos en un registro de récords o ingresen su "
"seudónimo para iniciar una partida en una crew."
msgstr ""

#: ../../prog_01.rst:12
msgid "¿Qué aprenderé?"
msgstr ""

#: ../../prog_01.rst:14
msgid "Conocer qué son las variables."
msgstr ""

#: ../../prog_01.rst:15
msgid "Maneras de ingresar información."
msgstr ""

#: ../../prog_01.rst:16
msgid "Mostrar la información."
msgstr ""

#: ../../prog_01.rst:19
msgid "¿Qué necesito?"
msgstr ""

#: ../../prog_01.rst:21
msgid ""
"Para empezar a programar necesitas una aplicación que pueda interpretar "
"tus programas, en esta guía de ejemplo usaremos un programa llamado "
"**Thonny** y lo puedes descargar desde https://thonny.org, es gratuito y "
"no necesitas nada más, está disponible para **Windows**, **Mac** o "
"**Linux**."
msgstr ""

#: ../../prog_01.rst:28
msgid ""
"La interfaz de **Thonny** es muy simple, como puedes ver en la parte "
"superior tienes una barra de herramientas, que te permitirán: crear, "
"guardar y ejecutar el programa, entre otras opciones no importantes en "
"este punto."
msgstr ""

#: ../../prog_01.rst:32
msgid ""
"Se divide en 2 partes, la parte superior donde escribiremos el programa "
"que lleva como título ``<untitled>`` que indica que el archivo aún no ha "
"sido guardado con un nombre, luego que guardemos el archivo aparecerá "
"aquí su nombre."
msgstr ""

#: ../../prog_01.rst:37
msgid ""
"En la parte inferior tenemos una ventana llamada **Shell** donde mostrará"
" la ejecución de nuestro programa y podremos interactuar con él a través "
"de ella."
msgstr ""

#: ../../prog_01.rst:41
msgid "¿Qué son las variables?"
msgstr ""

#: ../../prog_01.rst:43
msgid ""
"En programación una **variable** es como una caja pequeña donde podemos "
"guardar una cosa, existen de distintos tamaños, para guardar distinto "
"tipo de cosas. Imagina ahora que esas cajas las etiquetamos para poder "
"saber qué tienen en su interior, esto es el **nombre de la variable**."
msgstr ""

#: ../../prog_01.rst:48
msgid ""
"**En resumen**, una **variable** es donde podemos guardar **algo** y "
"tiene un **nombre** para reconocerla. Ese **algo** que podemos guardar "
"podría ser una **palabra** o un **número**."
msgstr ""

#: ../../prog_01.rst:53
msgid "¿Cómo se crea una variable?"
msgstr ""

#: ../../prog_01.rst:55
msgid ""
"Esto es muy sencillo, debes escoger que vas a aguardar en la variable y "
"luego definir un nombre. Veamos un ejemplo: digamos que queremos guardar "
"un **número**, los años de edad de una persona, entonces nombraremos a la"
" variable **edad**"
msgstr ""

#: ../../prog_01.rst:64
msgid ""
"Así es como se escribe en programación. Ahora te estarás preguntando ¿Por"
" qué el símbolo **igual**?, esto es confuso al principio, ya que "
"naturalmente ocupamos el símbolo **igual** para dar un resultado, pero en"
" programación el símbolo **igual** nos sirve para indicar que queremos "
"guardar **algo** en la **variable**, En este caso, **algo** es el número "
"**21**, que representa la edad de una persona y la estamos guardando en "
"la variable llamada **edad**."
msgstr ""

#: ../../prog_01.rst:72
msgid ""
"Continuando con el ejercicio, imagina qué otros datos debería tener una "
"persona, empecemos por **nombre** y **apellido**, ¿Qué otros más se te "
"ocurren?."
msgstr ""

#: ../../prog_01.rst:76
msgid ""
"El **nombre** o **apellido** de una persona es como una palabra, ya que "
"está compuesto de letras. en programación para indicar que es una "
"palabra, debemos encerrar esa palabra entre comillas."
msgstr ""

#: ../../prog_01.rst:84
msgid "CUIDADO: Para estos ejemplos, evita usar letras con tilde o ñ"
msgstr ""

#: ../../prog_01.rst:86
msgid "y hacemos esto para distinguirlo de una **variable**."
msgstr ""

#: ../../prog_01.rst:88
msgid ""
"Ahora abre la aplicación **thonny** y por cada línea, empieza a crear las"
" variables para los datos de una persona cualquiera (por ejemplo, pueden "
"ser tus datos)."
msgstr ""

#: ../../prog_01.rst:98
msgid "Guarda el archivo con el nombre **example01.py** en tu escritorio."
msgstr ""

#: ../../prog_01.rst:103
msgid "¿Cómo hago ahora que el programa funcione?"
msgstr ""

#: ../../prog_01.rst:105
msgid ""
"Luego que ya escribiste tus variables vamos a mostrar los datos en "
"pantalla, esto es lo que hacen los programas comúnmente, para ello los "
"programadores más experimentados han trabajado arduamente para ayudarnos "
"a hacer esta tarea y que sea muy fácil, han creado los **comandos** que "
"son herramientas, así como un carpintero tiene un martillo para clavar "
"clavos, los comandos son herramientas para usar con nuestras variables. "
"el comando que vamos a usar en este caso está pensado para **imprimir en "
"la pantalla** y se llama:"
msgstr ""

#: ../../prog_01.rst:117
msgid ""
"Los comando se distinguen de las variables porque llevan **paréntesis** y"
" dentro de esos paréntesis vamos a colocar nuestra variable para que el "
"comando actúe. Ahora te mostraremos como usar **print()**."
msgstr ""

#: ../../prog_01.rst:121
msgid ""
"**print()** acepta que le mandes a imprimir varias cosas a la vez, "
"mientras las separes por medio de **comas**."
msgstr ""

#: ../../prog_01.rst:128
msgid ""
"En este ejemplo le estamos indicando al comando **print()** que mande a "
"la pantalla la palabra **'Nombre:'** seguido del contenido de la variable"
" **nombre**."
msgstr ""

#: ../../prog_01.rst:132
msgid "El resultado será mostrado en pantalla de la siguiente forma:"
msgstr ""

#: ../../prog_01.rst:138
msgid ""
"Ahora en cada línea del archivo agrega los comandos **print()** para tus "
"otras variables, al finalizar deberías tener algo similar a esto:"
msgstr ""

#: ../../prog_01.rst:150
msgid "presiona el botón **play** de **thonny**."
msgstr ""

#: ../../prog_01.rst:154
msgid ""
"y el resultado debería ser algo similar a esto en la ventana **Shell** de"
" **thonny**."
msgstr ""

#: ../../prog_01.rst:163
#, python-format
msgid ""
"Ya en este punto tienes el 90% del programa terminado, puedes ver que "
"funciona y muestra los resultados como se espera. pero sería más "
"interesante si los datos pudiésemos ingresarlos por medio del teclado, "
"que es lo que comúnmente hacemos cuando llenamos un formulario de "
"registro. para esto vamos a usar otro comando llamado"
msgstr ""

#: ../../prog_01.rst:173
msgid ""
"Este comando espera a que la persona escriba algo en el teclado y "
"presione **ENTER**, este comando toma lo que ingresó la persona y lo "
"podemos guardar en una **variable**, además podemos decirle al comando "
"que imprima en pantalla algún mensaje para indicarle a la persona qué "
"debe escribir, como por ejemplo:"
msgstr ""

#: ../../prog_01.rst:182
msgid "El resultado en pantalla se mostrará:"
msgstr ""

#: ../../prog_01.rst:188
msgid ""
"Se quedará el cursor esperando a que la persona escriba en el teclado su "
"nombre y presione **ENTER**"
msgstr ""

#: ../../prog_01.rst:191
msgid ""
"Intenta hacer esto con tus otras variables, deberías lograr algo similar "
"a esto:"
msgstr ""

#: ../../prog_01.rst:203
msgid ""
"y haz clic en el botón **play** de **thonny**, podrás ingresar los datos "
"directamente desde la ventana **Shell**."
msgstr ""

#: ../../prog_01.rst:208
msgid ""
"Como puedes ver, con saber estas 3 simples cosas ya puedes crear "
"**variables** para almacenar tus datos, usar el **comandos** de entrada "
"**input()** y el **comandos** de salida **print()**, con esto ya puedes "
"practicar. En el próximo tutorial, te explicaremos cómo tomar decisiones "
"usando tus **variables**."
msgstr ""

#: ../../prog_01.rst:213
msgid ""
"Si quieres darnos tu opinión sobre este artículo te invitamos a "
"`contestar esta encuesta <https://forms.gle/WgxAGbshiTJATxaE9>`_"
msgstr ""

#: ../../prog_01.rst:215
msgid ""
"Si tienes dudas o requieres una guía más personalizada hablemos a través "
"de nuestra `página de facebook Rdckgames "
"<http://facebook.me/rdckgames>`_."
msgstr ""

